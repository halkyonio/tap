#@ load("@ytt:data", "data")
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: #@ data.values.namespace
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: kubernetes-dashboard
          image: #@ data.values.image.repository + ":" + #@ data.values.image.tag
          imagePullPolicy: #@ data.values.image.pullPolicy
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --namespace=kubernetes-dashboard
            - --auto-generate-certificates=false
            - --tls-cert-file=extra/tls.crt
            - --tls-key-file=extra/tls.key
          volumeMounts:
            - mountPath: /certs/extra
              name: certs-selfsigned
              readOnly: true
              #! Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: certs-selfsigned
          secret:
              defaultMode: 420
              secretName: k8s-ui-secret
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
      #! Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
